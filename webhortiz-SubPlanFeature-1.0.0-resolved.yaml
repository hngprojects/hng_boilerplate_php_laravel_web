openapi: 3.0.0
servers:
  - description: Subscription Plan and Feature
    url: https://virtserver.swaggerhub.com/bhimbho/SubPlanFeature/1.0.0
info:
  description: Subscription Plan and Feature API
  version: "1.0.0"
  title: Subscription Plan and Feature API
  contact:
    email: soneyeabimbola@aol.com
tags:
  - name: features
    description: feature
  - name: plans
    description: Plans
paths:
  /features:
    post:
      tags:
        - features
      summary: creates a feature for reuse
      operationId: addFeature
      description: creates a feature for reuse
      responses:
        '201':
          description: feature created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Features'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
        '422':
          description: validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: one or more validation errors
                  errors:
                    type: array
                    items:
                      properties:
                        name:
                          type: string
                          example: name field required
        '400':
          description: feature creation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: feature creation failed

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeaturesInput'
        description: Inventory item to add
  /plans:
    post:
      tags:
        - plans
      summary: creates a subscription plan
      operationId: addplan
      description: Adds an item to the system
      responses:
        '201':
          description: subscription plan created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlan'

        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
        '422':
          description: validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: one or more validation errors
                  errors:
                    type: array
                    items:
                      properties:
                        name:
                          type: string
                          example: name field required
        '400':
          description: creation of subscription plan failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: creation of subscription plan failed
                  
  /blogs/{id}:
    delete:
      tags:
        - blogs
      summary: Delete a blog post
      operationId: deleteBlog
      description: Deletes a blog post by ID. Accessible only to super admins.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the blog post to delete
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Blog successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Blog successfully deleted
                  status_code:
                    type: integer
                    example: 204
        '403':
          description: You are not authorized to perform this action
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: You are not authorized to perform this action
                  status_code:
                    type: integer
                    example: 403
        '404':
          description: Blog with the given Id does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Blog with the given Id does not exist
                  status_code:
                    type: integer
                    example: 404
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error.
                  status_code:
                    type: integer
                    example: 500

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPlanInput'
        description: Inventory item to add
components:
  schemas:
    SubscriptionPlan:
      type: object
      required:
        - name
        - price
        - duration
        - description
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: basic
        price:
          type: integer
          example: 1000
        duration:
          type: string
          example: monthly
        description:
          type: string
          example: this plan is valid for one month with extra 3days
        features:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/Features'

    Features:
      required:
        - name
        - status
      properties:
        name:
          type: string
          example: 2TB space
        description:
          type: string
          format: string
          example: 'xeoo'
        status:
          type: integer
          description: Status of the feature (can only be 1 or 0)
          example: 1
        status_text:
          type: string
          description: Status text of the feature (can only be active or inactive)
          example: active

    SubscriptionPlanInput:
      type: object
      required:
        - name
        - price
        - duration
        - description
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: basic
        price:
          type: integer
          example: 1000
        duration:
          type: string
          example: monthly
        description:
          type: string
          example: this plan is valid for one month with extra 3days
        features:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                example: xxxx-xxxxx-xxxxx-xxxxxx
              status:
                type: string
                example: 1 for active 0 for inactive


    FeaturesInput:
      required:
        - name
        - status
      properties:
        name:
          type: string
          example: 2TB space
        description:
          type: string
          format: string
          example: 'xeoo'
          
securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
